function init_tinymce_for(jq_selector) {
  tinymce.init({
    selector: jq_selector,
    extended_valid_elements: 'i[*]',
    browser_spellcheck: true,
    menubar: false,
    base_url: '/assets/tinymce',
    toolbar: "undo redo | styleselect | removeformat | style-p style-h1 style-h2 style-h3 | bold italic | bullist numlist outdent indent hr | table charmap nonbreaking | refinerylink | refineryimage media | fullscreen | code | removeformat",
    content_css: '<%= asset_path "tinymce.scss", only_path: false %>',
    plugins: ["image", "link", "lists", "fullscreen", "code", "stylebuttons", "refineryimage", "refinerylink", "hr", "table", "charmap", "nonbreaking", "media"],
    refinery_core_backend_route: '<%= Refinery::Core.backend_route %>',
    contextmenu: "link useBrowserSpellcheck image table",
    setup: function (editor) {
      editor.ui.registry.addMenuItem("useBrowserSpellcheck", {
        text: "Use `Ctrl+Right click` to access spellchecker",
        onAction: function () {
          editor.notificationManager.open({
            text:
              "To access the spellchecker, hold the Control (Ctrl) key and right-click on the misspelt word.",
            type: "info",
            timeout: 5000,
            closeButton: true,
          });
        },
      });
      editor.ui.registry.addContextMenu("useBrowserSpellcheck", {
        update: function (node) {
          return editor.selection.isCollapsed() ? ["useBrowserSpellcheck"] : [];
        },
      });
    },
    formats: {
      removeformat: [
        {
          selector: 'h1,h2,h3,h4,h5,h6,b,strong,em,i,font,u,strike,s,sub,sup,dfn,code,samp,kbd,var,cite,mark,q,del,ins,small',
          remove: 'all',
          split: true,
          block_expand: true,
          expand: false,
          deep: true
        },
        { selector: 'span', attributes: ['style', 'class', 'dir'], remove: 'empty', split: true, expand: false, deep: true },
        { selector: '*', attributes: ['style', 'class', 'dir'], split: false, expand: false, deep: true }
      ]
    }
  })
}

$(document).on('ready page:load', function() {
  init_tinymce_for("textarea.visual_editor")
  $('#submit_button').on('click', function(event) {

    var doc         = window.parent.document
    var dialog_type = $('#visual_editor_dialog_type', window.parent.document).val()

    switch (dialog_type)
    {
			case "link":
			  var href   =  $('#visual_editor_href',   doc).val()
				var title  =  $('#visual_editor_title',  doc).val()
				var target =  $('#visual_editor_target', doc).val()

				window.parent.parent.postMessage({
					mceAction: 'insertRefineryLink',
					href: href,
					title:  title,
					target: target
				}, '*')

				break

			case "image":
				var src   =  $('#visual_editor_src',   doc).val()
				var alt   =  $('#visual_editor_alt',   doc).val()
				var title =  $('#visual_editor_title', doc).val()

				window.parent.parent.postMessage({
					mceAction: 'insertRefineryImage',
					src: src,
					alt: alt,
					title: title
				}, '*')

				break

    }
  })
});
